pipeline {
  agent {
    kubernetes {
      cloud "kubernetes"
      yamlFile "gke-deploy/spring-boot-app/agent-build.yaml"
    }
  }
  stages {
    stage('Checkout') {
      steps {
        container("java-builder") {
          sh 'echo passed'
          //git branch: 'main', url: 'https://github.com/nsen-devops/jenkins-cicd'
        }
      }
    }
    stage('Build and Test') {
      steps {
        container("java-builder") {
          sh 'ls -ltr'
          // build the project and create a JAR file
          sh 'cd gke-deploy/spring-boot-app && mvn clean package'
        }
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.29.21.142:9000"
      }
      steps {
        container("java-builder") {
          withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh 'cd gke-deploy/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
          }
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "nsendevops/cicd-with-jenkins:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "gke-deploy/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        container("java-builder") {
          script {
              sh 'cd gke-deploy/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
              def dockerImage = docker.image("${DOCKER_IMAGE}")
              docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                  dockerImage.push()
              }
          }
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "jenkins-cicd"
        GIT_USER_NAME = "nsen-devops"
      }
      steps {
        container("java-builder") {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
              sh '''
                  git config user.email "nitin@xyz.com"
                  git config user.name "nitin"
                  BUILD_NUMBER=${BUILD_NUMBER}
                  sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" gke-deploy/spring-boot-app-manifests/deployment.yml
                  git add gke-deploy/spring-boot-app-manifests/deployment.yml
                  git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                  git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
              '''
          }
        }
      }
    }
  }
}
